org: winso
app: star-wars-api
service: star-wars-api
frameworkVersion: '3'
custom:
  documentation:
    version: '1'
    title: Star Wars API
    description: Star Wars API
    servers:
      url: https://localhost:{port}/
      description: Server Star Wars API
      variables:
        port:
          enum:
            - '3000'
          default: '3000'
          description: The port the server operates on
  serverless-offline:
    noPrependStageInUrl: true
    useChildProcesses: false
  tableName: people-table-${sls:stage}
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    target: node18
    exclude: []
    watch:
      pattern: src/**/*.ts
      ignore: .serverless/**/*
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt PeopleTable.Arn
  environment:
    PEOPLE_TABLE: ${self:custom.tableName}
functions:
  api:
    handler: src/index.handler
    events:
      - httpApi: '*'
  # create-people:
  #   handler: src/index.handler
  #   events:
  #     - http:
  #         path: people
  #         method: POST
  # read-people:
  #   handler: src/index.handler
  #   events:
  #     - http:
  #         path: people/{peopleId}
  #         method: GET
  # read-all-people:
  #   handler: src/index.handler
  #   events:
  #     - http:
  #         path: people
  #         method: GET
  # delete-people:
  #   handler: src/index.handler
  #   events:
  #     - http:
  #         path: people/{peopleId}
  #         method: DELETE
resources:
  Resources:
    PeopleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: peopleId
            AttributeType: S
        KeySchema:
          - AttributeName: peopleId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline
